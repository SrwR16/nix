email: knoopx@gmail.com
downloads_dir: ~/Downloads

pwd: pwd

apps: find /etc/profiles/per-user/knoopx/share/applications -iname "*.desktop"
hacker-news: curl "https://hnrss.org/show" | dasel -r xml -w json "rss.channel.item"

lookup: cat actions.yaml | yq -r '[paths(type == "string") as $p | select(getpath($p) | test("<param>")) | ($p | join(".")) + "\t" + getpath($p) + "\u0000"] | .[]'

ollama:
  api: echo "http://localhost:11434/api"
  text: gum write --placeholder "prompt..."
  models: gum spin --spinner dot --title "Loading model list..." -- curl --silent "<api>/tags" | jq -r '.models[].name' | sort
  model: echo "<models>" | gum choose --selected "$(skate get ollama-model)"
  run: |
    skate set ollama-model "<model>"
    ollamark -m "<model>" "<text>"
    # ghostty --window-decoration=false --wait-after-command -e 'ollamark -m "<model>" "<text>"'

# ask ollama

text:
  ollama: run-action --text "<text>" ollama.run
  text-to-speech: tts "<text>"
  nixpkgs: xdg-open "https://search.nixos.org/packages?channel=unstable&type=packages&query=<text>"
  github: xdg-open "https://github.com/search?type=repositories&q=<text>"

caffeine:
  on: caffon
  off: caffoff

global:
  clipboard: list-actions --text "{pbpaste}" | fuzzy
  hacker-news: run-action hacker-news | fuzzy
  downloads: find <downloads_dir>

music:
  music_dir: echo "/mnt/junk/Music"
  albums: find "<music_dir>" -iname "*.mp3" -print0 | xargs -0 dirname | uniq
  pick_album: echo "<albums>" | gum filter
  play_album: amberol "$(find "<pick_album>" -iname "*.mp3")"

igir:
  roms_dir: /mnt/junk/Roms
  dats_dir: ~/.local/share/dats
  dats: find -L <dats_dir>

  input_dirs: |
    echo "<downloads_dir>"
    echo "<roms_dir>"
    echo "<pwd>"

  output_dirs: |
    echo "<input>"
    echo "<roms_dir>"
    echo "<pwd>"

  input: echo "<input_dirs>" | fuzzy
  output: echo "<output_dirs>" | fuzzy

  move: npx -y igir move --dir-dat-name --dat "<dat>" --input <input> --output <output>

duckduckgo:
  text: gum input --placeholder "search..."
  search: |
    xdg-open $(ddgr --json --noprompt --expand "<text>" \
      | jq -rc '. | map("{{ Color \"99\" \"\(.title)\" }}\n\(.abstract)\n\(.url)\n") | .[]' \
      | gum format -t template \
      | perl -0 -pe 's/\n\n/\0/gm' \
      | fzf --read0 --ansi --multi --highlight-line --layout reverse \
      | tail -n 1)

docker:
  container: sudo docker ps | gum choose | awk '{print $1}'
  sh: sudo docker exec -ti "<container>" "/bin/sh"
  logs: sudo docker logs -f "<container>"
  prune: sudo docker system prune -a

gcal:
  month: gum spin --spinner dot --title "Fetching..." -- reset; gcalcli calm --monday --military --width 15 | less -r
  week: gum spin --spinner dot --title "Fetching..." -- reset; gcalcli calw --monday --military | less -r
  agenda: gum spin --spinner dot --title "Fetching..." -- reset; gcalcli agenda | less -r

launcher:
  actions: |
    echo "<apps>"
    echo "<ollama.models>"

  run: echo "<actions>" | fzf
