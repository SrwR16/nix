% nix

$ flake_path: echo "$HOME/.dotfiles"

# nixos update flakes
cd "<flake_path>" && nix flake update

# nixos switch
nh os switch path:"<flake_path>"

# nixos repl (:q to quit)
nix repl --expr "builtins.getFlake ''<flake_path>''"

# nix garbage collect
sudo nix-collect-garbage -d; nix-collect-garbage -d;

# nix edit file
code "<file>"
$ file: find <flake_path> -iname "*.nix"

# nixos get last cached rev
gum spin --spinner dot --title "Fetching..." -- curl -sL "https://monitoring.nixos.org/prometheus/api/v1/query?query=channel_revision" | jq -r ".data.result[] | select(.metric.channel==\"nixos-unstable\") | .metric.revision" | gum pager

; # nixos pin to specific rev until next update
; nix flake lock --override-input nixpkgs github:NixOS/nixpkgs/revision

; # nixos build
; sudo nixos-rebuild build --flake path:.

; # nixos switch
; sudo nixos-rebuild switch --flake path:.

; # install nixos config
; sudo nixos-rebuild switch --flake https://github.com/knoopx/nix/archive/refs/heads/master.zip#<host>

; # install home-manager config
; home-manager switch --flake https://github.com/knoopx/nix/archive/refs/heads/master.zip#<user>

; # nixos build vm
; nixos-rebuild build-vm --flake path:.

; # nixos build live usb image
; nix build path:.#nixosConfigurations.live.config.system.build.isoImage
